{"version":3,"file":"static/js/186.9beb3968.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/Reviews/Reviews.jsx","utils/js/fetch.js"],"sourcesContent":["import { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport PropTypes from 'prop-types';\n\nfunction Loader({ isLoading }) {\n  isLoading ? Loading.dots() : Loading.remove();\n}\n\nLoader.propTypes = { isLoading: PropTypes.bool.isRequired };\n\nexport default Loader;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport { getReviews } from 'utils/js/fetch';\n\nconst Reviews = () => {\n  const [dataReviews, setDataReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    (async () => {\n      try {\n        const resp = await getReviews(\n          `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=38126fe3d6cea635722ecf700f4bc3bf&language=en-US&page=1`\n        );\n\n        setDataReviews(resp);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <>\n      <Loader isLoading={isLoading} />\n      {!isLoading && dataReviews.length !== 0 ? (\n        <ul className=\"py-5\">\n          {dataReviews.map(({ author, content, id }) => (\n            <li key={id}>\n              <p>Author: {author}</p>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nasync function getTrending(URL) {\n  try {\n    const resp = await axios.get(URL);\n    const { results } = resp.data;\n\n    const dataMovieList = results.map(({ id, title, name }) => ({\n      id,\n      title,\n      name,\n    }));\n    return dataMovieList;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nasync function searchMovies(URL) {\n  try {\n    const resp = await axios.get(URL);\n    const { results } = resp.data;\n\n    const dataMovieList = results.map(({ id, title }) => ({\n      id,\n      title,\n    }));\n    return dataMovieList;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nasync function getMovieDetails(URL) {\n  try {\n    const resp = await axios.get(URL);\n    const { title, name, vote_average, overview, genres, poster_path } =\n      resp.data;\n\n    const dataMovie = {\n      title,\n      name,\n      vote_average,\n      overview,\n      genres,\n      poster_path,\n    };\n\n    return dataMovie;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nasync function getCast(URL) {\n  try {\n    const resp = await axios.get(URL);\n    const { cast } = resp.data;\n\n    const dataCast = cast.map(({ name, character, profile_path, id }) => ({\n      name,\n      character,\n      profile_path,\n      id,\n    }));\n\n    return dataCast;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nasync function getReviews(URL) {\n  try {\n    const resp = await axios.get(URL);\n    const { results } = resp.data;\n\n    const dataReviews = results.map(({ author, content, id }) => ({\n      author,\n      content,\n      id,\n    }));\n\n    return dataReviews;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nexport { getTrending, getMovieDetails, searchMovies, getCast, getReviews };\n"],"names":["Loader","isLoading","Loading","propTypes","PropTypes","useState","dataReviews","setDataReviews","setIsLoading","movieId","useParams","useEffect","getReviews","resp","console","log","length","className","map","author","content","id","getTrending","URL","axios","results","data","dataMovieList","title","name","Error","searchMovies","getMovieDetails","vote_average","overview","genres","poster_path","dataMovie","getCast","cast","dataCast","character","profile_path"],"sourceRoot":""}