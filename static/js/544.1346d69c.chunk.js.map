{"version":3,"file":"static/js/544.1346d69c.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/MovieList/MovieList.jsx","pages/Home/Home.jsx","utils/js/fetch.js"],"sourcesContent":["import { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport PropTypes from 'prop-types';\n\nfunction Loader({ isLoading }) {\n  isLoading ? Loading.dots() : Loading.remove();\n}\n\nLoader.propTypes = { isLoading: PropTypes.bool.isRequired };\n\nexport default Loader;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ dataMovies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {dataMovies.map(movie => {\n        const movieTitle = movie.title ?? movie.name;\n\n        return (\n          <li key={movie.id}>\n            <Link\n              to={`/movies/${movie.id}`}\n              state={{\n                from: location,\n              }}\n            >\n              {movieTitle}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMovieList.propType = PropTypes.arrayOf(PropTypes.object.isRequired).isRequired;\nexport default MovieList;\n","import { useEffect, useState } from 'react';\nimport MovieList from 'components/MovieList/MovieList';\nimport Loader from 'components/Loader/Loader';\nimport { getTrending } from 'utils/js/fetch';\n\nconst Home = () => {\n  const [dataMovieList, setDataMovieList] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const resp = await getTrending();\n        setDataMovieList(resp);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, []);\n\n  return (\n    <>\n      <Loader isLoading={isLoading} />\n      <h1 className=\"text-4xl\">Trending today</h1>\n      {!isLoading && <MovieList dataMovies={dataMovieList} />}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = { api_key: '38126fe3d6cea635722ecf700f4bc3bf' };\n\nasync function getTrending() {\n  const END_POINT = '/trending/all/day';\n\n  try {\n    const resp = await axios.get(END_POINT);\n    const { results } = resp.data;\n\n    const dataMovieList = results.map(({ id, title, name }) => ({\n      id,\n      title,\n      name,\n    }));\n    return dataMovieList;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nasync function searchMovies(query) {\n  const END_POINT = `/search/movie?query=${query}&include_adult=false&language=en-US&page=1`;\n\n  try {\n    const resp = await axios.get(END_POINT);\n    const { results } = resp.data;\n\n    const dataMovieList = results.map(({ id, title }) => ({\n      id,\n      title,\n    }));\n    return dataMovieList;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nasync function getMovieDetails(movieId) {\n  const END_POINT = `/movie/${movieId}`;\n\n  try {\n    const resp = await axios.get(END_POINT);\n    const { title, name, vote_average, overview, genres, poster_path } =\n      resp.data;\n\n    const dataMovie = {\n      title,\n      name,\n      vote_average,\n      overview,\n      genres,\n      poster_path,\n    };\n\n    return dataMovie;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nasync function getCast(movieId) {\n  const END_POINT = `/movie/${movieId}/credits?language=en-US`;\n\n  try {\n    const resp = await axios.get(END_POINT);\n    const { cast } = resp.data;\n\n    const dataCast = cast.map(({ name, character, profile_path, id }) => ({\n      name,\n      character,\n      profile_path,\n      id,\n    }));\n\n    return dataCast;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nasync function getReviews(movieId) {\n  const END_POINT = `/movie/${movieId}/reviews?language=en-US&page=1`;\n\n  try {\n    const resp = await axios.get(END_POINT);\n    const { results } = resp.data;\n\n    const dataReviews = results.map(({ author, content, id }) => ({\n      author,\n      content,\n      id,\n    }));\n\n    return dataReviews;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nexport { getTrending, getMovieDetails, searchMovies, getCast, getReviews };\n"],"names":["Loader","isLoading","Loading","propTypes","PropTypes","MovieList","dataMovies","location","useLocation","map","movie","movieTitle","title","name","to","id","state","from","propType","isRequired","useState","dataMovieList","setDataMovieList","setIsLoading","useEffect","getTrending","resp","console","log","className","axios","results","data","Error","searchMovies","query","END_POINT","getMovieDetails","movieId","vote_average","overview","genres","poster_path","dataMovie","getCast","cast","dataCast","character","profile_path","getReviews","dataReviews","author","content","api_key"],"sourceRoot":""}